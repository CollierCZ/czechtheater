// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Fact renders correctly with a tall image 1`] = `
<Fact
  fact={
    Object {
      "elements": Object {
        "description": Object {
          "value": "<div>Testing inner HTML</div>",
        },
        "image": Object {
          "value": Array [
            Object {
              "height": 250,
              "url": "https://example.com/wide.png",
              "width": 150,
            },
          ],
        },
      },
    }
  }
>
  <div
    className="fact"
  >
    <RichTextElement
      className="factText"
      resolveLink={[Function]}
      value="<div>Testing inner HTML</div>"
    >
      <div>
        Testing inner HTML
      </div>
    </RichTextElement>
    <FactImage
      image={
        Object {
          "height": 250,
          "url": "https://example.com/wide.png",
          "width": 150,
        }
      }
    >
      <Memo(ImageElement)
        backgroundColor="rgba(255,255,255,1)"
        className="factImage"
        height={150}
        image={
          Object {
            "height": 250,
            "url": "https://example.com/wide.png",
            "width": 150,
          }
        }
        layout="constrained"
      >
        <V
          alt=""
          className="factImage"
          image={
            Object {
              "backgroundColor": "rgba(255,255,255,1)",
              "height": 150,
              "images": Object {
                "fallback": Object {
                  "sizes": "(min-width: 90px) 90px, 100vw",
                  "src": "https://example.com/wide.png?w=90&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop",
                  "srcSet": "https://example.com/wide.png?w=23&h=38&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 23w,
https://example.com/wide.png?w=45&h=75&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 45w,
https://example.com/wide.png?w=90&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 90w",
                },
                "sources": Array [],
              },
              "layout": "constrained",
              "width": 90,
            }
          }
        >
          <U
            className="gatsby-image-wrapper gatsby-image-wrapper-constrained factImage"
            data-gatsby-image-wrapper=""
            style={
              Object {
                "backgroundColor": undefined,
                "display": "inline-block",
                "overflow": "hidden",
                "position": "relative",
                "verticalAlign": "top",
              }
            }
          >
            <div
              className="gatsby-image-wrapper gatsby-image-wrapper-constrained factImage"
              data-gatsby-image-wrapper=""
              style={
                Object {
                  "backgroundColor": undefined,
                  "display": "inline-block",
                  "overflow": "hidden",
                  "position": "relative",
                  "verticalAlign": "top",
                }
              }
            >
              <P
                height={150}
                layout="constrained"
                width={90}
              >
                <C
                  height={150}
                  layout="constrained"
                  width={90}
                >
                  <div
                    style={
                      Object {
                        "display": "block",
                        "maxWidth": 90,
                      }
                    }
                  >
                    <img
                      alt=""
                      aria-hidden="true"
                      role="presentation"
                      src="data:image/svg+xml;charset=utf-8,%3Csvg height='150' width='90' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E"
                      style={
                        Object {
                          "display": "block",
                          "maxWidth": "100%",
                          "position": "static",
                        }
                      }
                    />
                  </div>
                </C>
                <Placeholder
                  aria-hidden={true}
                  data-placeholder-image=""
                  style={
                    Object {
                      "height": "100%",
                      "left": 0,
                      "position": "absolute",
                      "top": 0,
                      "width": "100%",
                    }
                  }
                >
                  <div
                    aria-hidden={true}
                    data-placeholder-image=""
                    style={
                      Object {
                        "height": "100%",
                        "left": 0,
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                  />
                </Placeholder>
                <MainImage
                  alt=""
                  data-gatsby-image-ssr=""
                  data-main-image=""
                  fallback={
                    Object {
                      "sizes": "(min-width: 90px) 90px, 100vw",
                      "src": "https://example.com/wide.png?w=90&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop",
                      "srcSet": "https://example.com/wide.png?w=23&h=38&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 23w,https://example.com/wide.png?w=45&h=75&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 45w,https://example.com/wide.png?w=90&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 90w",
                    }
                  }
                  loading="lazy"
                  onLoad={[Function]}
                  shouldLoad={false}
                  sources={Array []}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "height": "100%",
                      "left": 0,
                      "objectFit": undefined,
                      "objectPosition": undefined,
                      "opacity": 0,
                      "position": "absolute",
                      "top": 0,
                      "transform": "translateZ(0)",
                      "transition": "opacity 250ms linear",
                      "width": "100%",
                      "willChange": "opacity",
                    }
                  }
                >
                  <Picture
                    alt=""
                    data-gatsby-image-ssr=""
                    data-main-image=""
                    fallback={
                      Object {
                        "sizes": "(min-width: 90px) 90px, 100vw",
                        "src": "https://example.com/wide.png?w=90&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop",
                        "srcSet": "https://example.com/wide.png?w=23&h=38&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 23w,https://example.com/wide.png?w=45&h=75&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 45w,https://example.com/wide.png?w=90&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 90w",
                      }
                    }
                    loading="lazy"
                    onLoad={[Function]}
                    shouldLoad={false}
                    sources={Array []}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "height": "100%",
                        "left": 0,
                        "objectFit": undefined,
                        "objectPosition": undefined,
                        "opacity": 0,
                        "position": "absolute",
                        "top": 0,
                        "transform": "translateZ(0)",
                        "transition": "opacity 250ms linear",
                        "width": "100%",
                        "willChange": "opacity",
                      }
                    }
                  >
                    <O
                      alt=""
                      data-gatsby-image-ssr=""
                      data-main-image=""
                      innerRef={null}
                      loading="lazy"
                      onLoad={[Function]}
                      shouldLoad={false}
                      sizes="(min-width: 90px) 90px, 100vw"
                      src="https://example.com/wide.png?w=90&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop"
                      srcSet="https://example.com/wide.png?w=23&h=38&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 23w,https://example.com/wide.png?w=45&h=75&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 45w,https://example.com/wide.png?w=90&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 90w"
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "height": "100%",
                          "left": 0,
                          "objectFit": undefined,
                          "objectPosition": undefined,
                          "opacity": 0,
                          "position": "absolute",
                          "top": 0,
                          "transform": "translateZ(0)",
                          "transition": "opacity 250ms linear",
                          "width": "100%",
                          "willChange": "opacity",
                        }
                      }
                    >
                      <img
                        alt=""
                        data-gatsby-image-ssr=""
                        data-main-image=""
                        data-src="https://example.com/wide.png?w=90&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop"
                        data-srcset="https://example.com/wide.png?w=23&h=38&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 23w,https://example.com/wide.png?w=45&h=75&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 45w,https://example.com/wide.png?w=90&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 90w"
                        decoding="async"
                        loading="lazy"
                        onLoad={[Function]}
                        sizes="(min-width: 90px) 90px, 100vw"
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "height": "100%",
                            "left": 0,
                            "objectFit": undefined,
                            "objectPosition": undefined,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 0,
                            "transform": "translateZ(0)",
                            "transition": "opacity 250ms linear",
                            "width": "100%",
                            "willChange": "opacity",
                          }
                        }
                      />
                    </O>
                  </Picture>
                  <noscript>
                    <Picture
                      alt=""
                      data-gatsby-image-ssr=""
                      data-main-image=""
                      fallback={
                        Object {
                          "sizes": "(min-width: 90px) 90px, 100vw",
                          "src": "https://example.com/wide.png?w=90&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop",
                          "srcSet": "https://example.com/wide.png?w=23&h=38&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 23w,https://example.com/wide.png?w=45&h=75&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 45w,https://example.com/wide.png?w=90&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 90w",
                        }
                      }
                      loading="lazy"
                      onLoad={[Function]}
                      shouldLoad={true}
                      sources={Array []}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "height": "100%",
                          "left": 0,
                          "objectFit": undefined,
                          "objectPosition": undefined,
                          "opacity": 0,
                          "position": "absolute",
                          "top": 0,
                          "transform": "translateZ(0)",
                          "transition": "opacity 250ms linear",
                          "width": "100%",
                          "willChange": "opacity",
                        }
                      }
                    />
                  </noscript>
                </MainImage>
                <D>
                  <script
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "const t=\\"undefined\\"!=typeof HTMLImageElement&&\\"loading\\"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll(\\"img[data-main-image]\\");for(let e of t){e.dataset.src&&(e.setAttribute(\\"src\\",e.dataset.src),e.removeAttribute(\\"data-src\\")),e.dataset.srcset&&(e.setAttribute(\\"srcset\\",e.dataset.srcset),e.removeAttribute(\\"data-srcset\\"));const t=e.parentNode.querySelectorAll(\\"source[data-srcset]\\");for(let e of t)e.setAttribute(\\"srcset\\",e.dataset.srcset),e.removeAttribute(\\"data-srcset\\");e.complete&&(e.style.opacity=1)}}",
                      }
                    }
                    type="module"
                  />
                </D>
              </P>
            </div>
          </U>
        </V>
      </Memo(ImageElement)>
    </FactImage>
  </div>
</Fact>
`;

exports[`Fact renders correctly with a wide image 1`] = `
<Fact
  fact={
    Object {
      "elements": Object {
        "description": Object {
          "value": "<div>Testing inner HTML</div>",
        },
        "image": Object {
          "value": Array [
            Object {
              "height": 150,
              "url": "https://example.com/wide.png",
              "width": 250,
            },
          ],
        },
      },
    }
  }
>
  <div
    className="fact"
  >
    <RichTextElement
      className="factText"
      resolveLink={[Function]}
      value="<div>Testing inner HTML</div>"
    >
      <div>
        Testing inner HTML
      </div>
    </RichTextElement>
    <FactImage
      image={
        Object {
          "height": 150,
          "url": "https://example.com/wide.png",
          "width": 250,
        }
      }
    >
      <Memo(ImageElement)
        alt=""
        backgroundColor="rgba(255,255,255,1)"
        className="factImage"
        image={
          Object {
            "height": 150,
            "url": "https://example.com/wide.png",
            "width": 250,
          }
        }
        layout="constrained"
        width={250}
      >
        <V
          alt=""
          className="factImage"
          image={
            Object {
              "backgroundColor": "rgba(255,255,255,1)",
              "height": 150,
              "images": Object {
                "fallback": Object {
                  "sizes": "(min-width: 250px) 250px, 100vw",
                  "src": "https://example.com/wide.png?w=250&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop",
                  "srcSet": "https://example.com/wide.png?w=63&h=38&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 63w,
https://example.com/wide.png?w=125&h=75&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 125w,
https://example.com/wide.png?w=250&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 250w",
                },
                "sources": Array [],
              },
              "layout": "constrained",
              "width": 250,
            }
          }
        >
          <U
            className="gatsby-image-wrapper gatsby-image-wrapper-constrained factImage"
            data-gatsby-image-wrapper=""
            style={
              Object {
                "backgroundColor": undefined,
                "display": "inline-block",
                "overflow": "hidden",
                "position": "relative",
                "verticalAlign": "top",
              }
            }
          >
            <div
              className="gatsby-image-wrapper gatsby-image-wrapper-constrained factImage"
              data-gatsby-image-wrapper=""
              style={
                Object {
                  "backgroundColor": undefined,
                  "display": "inline-block",
                  "overflow": "hidden",
                  "position": "relative",
                  "verticalAlign": "top",
                }
              }
            >
              <P
                height={150}
                layout="constrained"
                width={250}
              >
                <C
                  height={150}
                  layout="constrained"
                  width={250}
                >
                  <div
                    style={
                      Object {
                        "display": "block",
                        "maxWidth": 250,
                      }
                    }
                  >
                    <img
                      alt=""
                      aria-hidden="true"
                      role="presentation"
                      src="data:image/svg+xml;charset=utf-8,%3Csvg height='150' width='250' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E"
                      style={
                        Object {
                          "display": "block",
                          "maxWidth": "100%",
                          "position": "static",
                        }
                      }
                    />
                  </div>
                </C>
                <Placeholder
                  aria-hidden={true}
                  data-placeholder-image=""
                  style={
                    Object {
                      "height": "100%",
                      "left": 0,
                      "position": "absolute",
                      "top": 0,
                      "width": "100%",
                    }
                  }
                >
                  <div
                    aria-hidden={true}
                    data-placeholder-image=""
                    style={
                      Object {
                        "height": "100%",
                        "left": 0,
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                      }
                    }
                  />
                </Placeholder>
                <MainImage
                  alt=""
                  data-gatsby-image-ssr=""
                  data-main-image=""
                  fallback={
                    Object {
                      "sizes": "(min-width: 250px) 250px, 100vw",
                      "src": "https://example.com/wide.png?w=250&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop",
                      "srcSet": "https://example.com/wide.png?w=63&h=38&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 63w,https://example.com/wide.png?w=125&h=75&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 125w,https://example.com/wide.png?w=250&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 250w",
                    }
                  }
                  loading="lazy"
                  onLoad={[Function]}
                  shouldLoad={false}
                  sources={Array []}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "height": "100%",
                      "left": 0,
                      "objectFit": undefined,
                      "objectPosition": undefined,
                      "opacity": 0,
                      "position": "absolute",
                      "top": 0,
                      "transform": "translateZ(0)",
                      "transition": "opacity 250ms linear",
                      "width": "100%",
                      "willChange": "opacity",
                    }
                  }
                >
                  <Picture
                    alt=""
                    data-gatsby-image-ssr=""
                    data-main-image=""
                    fallback={
                      Object {
                        "sizes": "(min-width: 250px) 250px, 100vw",
                        "src": "https://example.com/wide.png?w=250&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop",
                        "srcSet": "https://example.com/wide.png?w=63&h=38&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 63w,https://example.com/wide.png?w=125&h=75&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 125w,https://example.com/wide.png?w=250&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 250w",
                      }
                    }
                    loading="lazy"
                    onLoad={[Function]}
                    shouldLoad={false}
                    sources={Array []}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "height": "100%",
                        "left": 0,
                        "objectFit": undefined,
                        "objectPosition": undefined,
                        "opacity": 0,
                        "position": "absolute",
                        "top": 0,
                        "transform": "translateZ(0)",
                        "transition": "opacity 250ms linear",
                        "width": "100%",
                        "willChange": "opacity",
                      }
                    }
                  >
                    <O
                      alt=""
                      data-gatsby-image-ssr=""
                      data-main-image=""
                      innerRef={null}
                      loading="lazy"
                      onLoad={[Function]}
                      shouldLoad={false}
                      sizes="(min-width: 250px) 250px, 100vw"
                      src="https://example.com/wide.png?w=250&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop"
                      srcSet="https://example.com/wide.png?w=63&h=38&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 63w,https://example.com/wide.png?w=125&h=75&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 125w,https://example.com/wide.png?w=250&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 250w"
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "height": "100%",
                          "left": 0,
                          "objectFit": undefined,
                          "objectPosition": undefined,
                          "opacity": 0,
                          "position": "absolute",
                          "top": 0,
                          "transform": "translateZ(0)",
                          "transition": "opacity 250ms linear",
                          "width": "100%",
                          "willChange": "opacity",
                        }
                      }
                    >
                      <img
                        alt=""
                        data-gatsby-image-ssr=""
                        data-main-image=""
                        data-src="https://example.com/wide.png?w=250&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop"
                        data-srcset="https://example.com/wide.png?w=63&h=38&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 63w,https://example.com/wide.png?w=125&h=75&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 125w,https://example.com/wide.png?w=250&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 250w"
                        decoding="async"
                        loading="lazy"
                        onLoad={[Function]}
                        sizes="(min-width: 250px) 250px, 100vw"
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "height": "100%",
                            "left": 0,
                            "objectFit": undefined,
                            "objectPosition": undefined,
                            "opacity": 0,
                            "position": "absolute",
                            "top": 0,
                            "transform": "translateZ(0)",
                            "transition": "opacity 250ms linear",
                            "width": "100%",
                            "willChange": "opacity",
                          }
                        }
                      />
                    </O>
                  </Picture>
                  <noscript>
                    <Picture
                      alt=""
                      data-gatsby-image-ssr=""
                      data-main-image=""
                      fallback={
                        Object {
                          "sizes": "(min-width: 250px) 250px, 100vw",
                          "src": "https://example.com/wide.png?w=250&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop",
                          "srcSet": "https://example.com/wide.png?w=63&h=38&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 63w,https://example.com/wide.png?w=125&h=75&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 125w,https://example.com/wide.png?w=250&h=150&auto=format&bg=rgba(255%2C255%2C255%2C1)&fit=crop 250w",
                        }
                      }
                      loading="lazy"
                      onLoad={[Function]}
                      shouldLoad={true}
                      sources={Array []}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "height": "100%",
                          "left": 0,
                          "objectFit": undefined,
                          "objectPosition": undefined,
                          "opacity": 0,
                          "position": "absolute",
                          "top": 0,
                          "transform": "translateZ(0)",
                          "transition": "opacity 250ms linear",
                          "width": "100%",
                          "willChange": "opacity",
                        }
                      }
                    />
                  </noscript>
                </MainImage>
                <D>
                  <script
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "const t=\\"undefined\\"!=typeof HTMLImageElement&&\\"loading\\"in HTMLImageElement.prototype;if(t){const t=document.querySelectorAll(\\"img[data-main-image]\\");for(let e of t){e.dataset.src&&(e.setAttribute(\\"src\\",e.dataset.src),e.removeAttribute(\\"data-src\\")),e.dataset.srcset&&(e.setAttribute(\\"srcset\\",e.dataset.srcset),e.removeAttribute(\\"data-srcset\\"));const t=e.parentNode.querySelectorAll(\\"source[data-srcset]\\");for(let e of t)e.setAttribute(\\"srcset\\",e.dataset.srcset),e.removeAttribute(\\"data-srcset\\");e.complete&&(e.style.opacity=1)}}",
                      }
                    }
                    type="module"
                  />
                </D>
              </P>
            </div>
          </U>
        </V>
      </Memo(ImageElement)>
    </FactImage>
  </div>
</Fact>
`;

exports[`Fact renders correctly without an image 1`] = `
<div
  className="fact"
>
  <RichTextElement
    className="factText"
    resolveLink={[Function]}
    value="<div>Testing inner HTML</div>"
  />
</div>
`;
