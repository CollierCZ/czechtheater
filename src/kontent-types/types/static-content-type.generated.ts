/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: Czech Theater
 * Environment: Production
 * Id: fb599585-baec-0077-1624-981d3321fff0
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CallToActionButtonType } from '../types/call-to-action-button-type.generated.js';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { ImageWithCaptionType } from '../types/image-with-caption-type.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { TrailerType } from '../types/trailer-type.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Static content' type
*/
            export type StaticContentTypeCodename = keyof Pick<Record<TypeCodenames, null>, "static_content">;

            /*
* Typeguard for codename of 'Static content' type
*/
            export function isStaticContentTypeCodename(value: string | undefined | null): value is StaticContentTypeCodename {
                return typeof value === 'string' && value === ('static_content' satisfies StaticContentTypeCodename);
            }

/*
    * Static content
    *
    * Id: 671e93e5-a68f-46f8-ae22-44f04a19ba05
* Codename: static_content
    */
export type StaticContentType = IContentItem<
{
/*
    * Content
    *
    * Codename: content
* Id: 7123cf05-112e-4118-bf9a-8a6a5f78aeb4
* Type: rich_text
* Required: true
* Allowed content types: image_with_caption, call_to_action_button, trailer
    */
                readonly content: Elements.RichTextElement<ImageWithCaptionType | CallToActionButtonType | TrailerType>;}, 
StaticContentTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Static content
*/
export type StaticContentTypeElementCodenames = 'content';;

/*
    * Type guard for Static content
    *
    * Id: 671e93e5-a68f-46f8-ae22-44f04a19ba05
* Codename: static_content
    */
export function isStaticContentType(item: IContentItem | undefined | null): item is StaticContentType {
                return item?.system.type === ('static_content' satisfies StaticContentTypeCodename);
            };



            