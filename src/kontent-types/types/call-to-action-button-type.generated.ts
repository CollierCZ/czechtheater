/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: Czech Theater
 * Environment: Production
 * Id: fb599585-baec-0077-1624-981d3321fff0
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Call to Action Button' type
*/
            export type CallToActionButtonTypeCodename = keyof Pick<Record<TypeCodenames, null>, "call_to_action_button">;

            /*
* Typeguard for codename of 'Call to Action Button' type
*/
            export function isCallToActionButtonTypeCodename(value: string | undefined | null): value is CallToActionButtonTypeCodename {
                return typeof value === 'string' && value === ('call_to_action_button' satisfies CallToActionButtonTypeCodename);
            }

/*
    * Call to Action Button
    *
    * Id: 7f62781c-8290-4580-8a34-9dbae5deb7ad
* Codename: call_to_action_button
    */
export type CallToActionButtonType = IContentItem<
{
/*
    * Button text
    *
    * Codename: button_text
* Id: 681680b9-95a3-4888-b9df-0c9d6b97812e
* Type: text
* Required: true
* Guidelines: What text people will see
    */
                readonly button_text: Elements.TextElement;

/*
    * URL
    *
    * Codename: url
* Id: ad6c3f81-50df-4dc4-bf43-009335f06187
* Type: text
* Required: true
* Guidelines: Where people go after clicking the button
    */
                readonly url: Elements.TextElement;}, 
CallToActionButtonTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Call to Action Button
*/
export type CallToActionButtonTypeElementCodenames = 'button_text' | 'url';;

/*
    * Type guard for Call to Action Button
    *
    * Id: 7f62781c-8290-4580-8a34-9dbae5deb7ad
* Codename: call_to_action_button
    */
export function isCallToActionButtonType(item: IContentItem | undefined | null): item is CallToActionButtonType {
                return item?.system.type === ('call_to_action_button' satisfies CallToActionButtonTypeCodename);
            };



            