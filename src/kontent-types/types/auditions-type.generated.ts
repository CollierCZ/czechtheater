/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: Czech Theater
 * Environment: Production
 * Id: fb599585-baec-0077-1624-981d3321fff0
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { FixedSizeImageType } from '../types/fixed-size-image-type.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { TrailerType } from '../types/trailer-type.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Auditions' type
*/
            export type AuditionsTypeCodename = keyof Pick<Record<TypeCodenames, null>, "auditions">;

            /*
* Typeguard for codename of 'Auditions' type
*/
            export function isAuditionsTypeCodename(value: string | undefined | null): value is AuditionsTypeCodename {
                return typeof value === 'string' && value === ('auditions' satisfies AuditionsTypeCodename);
            }

/*
    * Auditions
    *
    * Id: 16dea75b-52d3-4f3b-993f-837b1a443c9b
* Codename: auditions
    */
export type AuditionsType = IContentItem<
{
/*
    * Upcoming auditions description
    *
    * Codename: upcoming_auditions_description
* Id: f6ecb711-72b0-4881-9845-7a17c6f9633a
* Type: rich_text
* Required: true
* Allowed content types: fixed_size_image, trailer
    */
                readonly upcoming_auditions_description: Elements.RichTextElement<FixedSizeImageType | TrailerType>;

/*
    * Audition date
    *
    * Codename: audition_date
* Id: 5d294dba-4b71-4018-b7b3-db248f1e6d43
* Type: date_time
* Required: false
    */
                readonly audition_date: Elements.DateTimeElement;

/*
    * Link to audition event
    *
    * Codename: link_to_audition_event
* Id: 832dfc8c-8865-46bc-b2af-7761c4c8f233
* Type: text
* Required: false
* Guidelines: Such as on Facebook
    */
                readonly link_to_audition_event: Elements.TextElement;}, 
AuditionsTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Auditions
*/
export type AuditionsTypeElementCodenames = 'upcoming_auditions_description' | 'audition_date' | 'link_to_audition_event';;

/*
    * Type guard for Auditions
    *
    * Id: 16dea75b-52d3-4f3b-993f-837b1a443c9b
* Codename: auditions
    */
export function isAuditionsType(item: IContentItem | undefined | null): item is AuditionsType {
                return item?.system.type === ('auditions' satisfies AuditionsTypeCodename);
            };



            