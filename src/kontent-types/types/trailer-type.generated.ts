/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: Czech Theater
 * Environment: Production
 * Id: fb599585-baec-0077-1624-981d3321fff0
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Trailer' type
*/
            export type TrailerTypeCodename = keyof Pick<Record<TypeCodenames, null>, "trailer">;

            /*
* Typeguard for codename of 'Trailer' type
*/
            export function isTrailerTypeCodename(value: string | undefined | null): value is TrailerTypeCodename {
                return typeof value === 'string' && value === ('trailer' satisfies TrailerTypeCodename);
            }

/*
    * Trailer
    *
    * Id: 2a23c0b2-aaa1-471b-9719-57ffa01a5429
* Codename: trailer
    */
export type TrailerType = IContentItem<
{
/*
    * Trailer video
    *
    * Codename: trailer_video
* Id: 19e38831-4a47-4871-8e38-acd018a21611
* Type: asset
* Required: false
    */
                readonly trailer_video: Elements.AssetsElement;

/*
    * Link to video hosted elsewhere
    *
    * Codename: link_to_video_hosted_elsewhere
* Id: c5c8ca33-cf9d-4d6a-a7e3-b1d8e52859ee
* Type: text
* Required: false
* Guidelines: Such as YouTube
    */
                readonly link_to_video_hosted_elsewhere: Elements.TextElement;}, 
TrailerTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Trailer
*/
export type TrailerTypeElementCodenames = 'trailer_video' | 'link_to_video_hosted_elsewhere';;

/*
    * Type guard for Trailer
    *
    * Id: 2a23c0b2-aaa1-471b-9719-57ffa01a5429
* Codename: trailer
    */
export function isTrailerType(item: IContentItem | undefined | null): item is TrailerType {
                return item?.system.type === ('trailer' satisfies TrailerTypeCodename);
            };



            