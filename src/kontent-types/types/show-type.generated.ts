/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: Czech Theater
 * Environment: Production
 * Id: fb599585-baec-0077-1624-981d3321fff0
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { CallToActionButtonType } from '../types/call-to-action-button-type.generated.js';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { FixedSizeImageType } from '../types/fixed-size-image-type.generated.js';
import type { ImageWithCaptionType } from '../types/image-with-caption-type.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { TrailerType } from '../types/trailer-type.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Show' type
*/
            export type ShowTypeCodename = keyof Pick<Record<TypeCodenames, null>, "show">;

            /*
* Typeguard for codename of 'Show' type
*/
            export function isShowTypeCodename(value: string | undefined | null): value is ShowTypeCodename {
                return typeof value === 'string' && value === ('show' satisfies ShowTypeCodename);
            }

/*
    * Show
    *
    * Id: e9c110a9-7a96-47bb-922d-397ef9632c51
* Codename: show
    */
export type ShowType = IContentItem<
{
/*
    * Name
    *
    * Codename: name
* Id: 62be8611-be31-4983-a51b-d99cbde75972
* Type: text
* Required: true
    */
                readonly name: Elements.TextElement;

/*
    * Main image
    *
    * Codename: main_image
* Id: 3ee38568-bde5-428d-9702-bf646c7d7547
* Type: asset
* Required: true
* Guidelines: A single image to be used as a preview
    */
                readonly main_image: Elements.AssetsElement;

/*
    * Short description
    *
    * Codename: short_description
* Id: 0c2ac722-9302-4d59-8977-a00414844843
* Type: text
* Required: true
    */
                readonly short_description: Elements.TextElement;

/*
    * Description
    *
    * Codename: description
* Id: 9e6ba8a8-a878-4c56-a7e7-5dcf055de610
* Type: rich_text
* Required: true
* Allowed content types: fixed_size_image, call_to_action_button
    */
                readonly description: Elements.RichTextElement<FixedSizeImageType | CallToActionButtonType>;

/*
    * Trailer
    *
    * Codename: trailer
* Id: ef643dde-d5df-4921-82cf-e6465859d914
* Type: rich_text
* Required: false
* Allowed content types: trailer
* Guidelines: Include 1 trailer for the show
    */
                readonly trailer: Elements.RichTextElement<TrailerType>;

/*
    * Premiere
    *
    * Codename: premiere
* Id: 9e1ed95e-3b15-43b9-845a-fc8d02adc4b8
* Type: date_time
* Required: false
    */
                readonly premiere: Elements.DateTimeElement;

/*
    * Ticket link
    *
    * Codename: ticket_link
* Id: 7a35d9c3-a52e-435b-ab65-95e453e2f8ff
* Type: text
* Required: false
* Guidelines: The URL where tickets are sold
    */
                readonly ticket_link: Elements.TextElement;

/*
    * Full performance link
    *
    * Codename: full_performance_link
* Id: 541da3ef-4032-430b-a839-c8a3eda6d4a9
* Type: text
* Required: false
* Guidelines: A link to the full performance of the show
    */
                readonly full_performance_link: Elements.TextElement;

/*
    * Gallery
    *
    * Codename: gallery
* Id: 6f0583db-9d1f-4caa-af8a-e36c0ee505c1
* Type: asset
* Required: false
* Guidelines: Various images from the show displayed as a gallery
    */
                readonly gallery: Elements.AssetsElement;

/*
    * Gallery with captions
    *
    * Codename: gallery_with_captions
* Id: 92fe8244-d346-4411-820c-f5f86e4ac666
* Type: rich_text
* Required: false
* Allowed content types: image_with_caption
* Guidelines: Include images with a caption to be displayed in a scrolling gallery
    */
                readonly gallery_with_captions: Elements.RichTextElement<ImageWithCaptionType>;

/*
    * URL
    *
    * Codename: url
* Id: ff17c8ed-31d6-48e3-beac-fa0ab3045fe7
* Type: url_slug
* Required: true
    */
                readonly url: Elements.UrlSlugElement;}, 
ShowTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Show
*/
export type ShowTypeElementCodenames = 'name' | 'main_image' | 'short_description' | 'description' | 'trailer' | 'premiere' | 'ticket_link' | 'full_performance_link' | 'gallery' | 'gallery_with_captions' | 'url';;

/*
    * Type guard for Show
    *
    * Id: e9c110a9-7a96-47bb-922d-397ef9632c51
* Codename: show
    */
export function isShowType(item: IContentItem | undefined | null): item is ShowType {
                return item?.system.type === ('show' satisfies ShowTypeCodename);
            };



            